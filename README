# petalisp-oclcl (or oclcl-petalisp?)

petalisp-oclcl is a [Petalisp](https://github.com/marcoheisig/Petalisp) backend
that runs Petalisp programs on GPUs using [oclcl](https://github.com/gos-k/oclcl)
to help translate Common Lisp programs to OpenCL.

## What works?

We can translate some code like:

```lisp
(compute (α #'+ #(1 2 3) #(2 3 4))) => #(3.0 5.0 7.0)

(defun square (x) (* x x))
(compute (α #'square #(1 2 3 4 5))) => #(1.0 4.0 9.0 16.0 25.0)
```

Currently, the only control structure that can be translated is IF, numbers are 
coerced to floats, and only `petalisp:α` is implemented. Inputs to α also have
to be the same shape, but this will be improved very soon. Consider this
repository a proof-of-concept backend...

We need to implement (written as function/IR class):

- β/reduction
- α/application with different shapes (eg `(~ 0 1 ~ 0 2)` and `(~ 0 1)`)
- fuse/fusion
- reshape/reference
